name: tests_and_publish.yaml

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: node
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build
        shell: bash
        run: npm run build
      - name: Run tests
        shell: bash
        run: npm run test:imports
        env:
          FORCE_COLOR: "1"
  test-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: node
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build
        shell: bash
        run: npm run build
      - name: Run tests
        shell: bash
        run: npm run test:cli
        env:
          FORCE_COLOR: "1"
  test-legacy-node-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: node
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build
        shell: bash
        run: npm run build
      - name: Run tests
        shell: bash
        run: npm run test:node:versions:LE:16
        env:
          FORCE_COLOR: "1"
  test-supported-node-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x, 18.x, 19.x, 20.x, 21.x, 22.x, 23.x, 24.x, node] # 'node' means latest stable version
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Echo Node.js version
        run: echo "Node.js version = ${{ matrix.node-version }}"
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build
        shell: bash
        run: npm run build
      - name: Run tests (>= v20.x)
        if: ${{ matrix.node-version == '20.x' || matrix.node-version == '21.x' || matrix.node-version == '22.x' || matrix.node-version == '23.x' || matrix.node-version == '24.x' || matrix.node-version == 'node' }}
        shell: bash
        run: npm run test:node:versions:GE:20
        env:
          FORCE_COLOR: 1
      - name: Run tests (v17.x - v19.x) [node:test doesn't exist in these versions]
        if: ${{ matrix.node-version == '17.x' || matrix.node-version == '18.x' || matrix.node-version == '19.x' }}
        shell: bash
        run: npm run test:node:versions:17:18:19
        env:
          FORCE_COLOR: 1
  test-bun:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: v1.2.22
      - name: Install dependencies
        run: bun install
      - name: Run Bun tests
        run: bun run test:bun
  test-deno:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      - name: Install dependencies
        run: deno install
      - name: Build
        shell: bash
        run: deno task build
      - name: Run tests
        shell: bash
        run: deno task test:deno
        env:
          FORCE_COLOR: "1"
  test-browsers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: node
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Build
        shell: bash
        run: npm run build
      - name: Run tests
        shell: bash
        run: npm run test:chrome && npm run test:firefox && npm run test:safari
        env:
          FORCE_COLOR: "1"
  maybe-publish:
    needs: [test-imports, test-cli, test-legacy-node-versions, test-supported-node-versions, test-bun, test-browsers, test-deno]
    if: startsWith(github.event.head_commit.message, '[publish] ')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          registry-url: "https://registry.npmjs.org/"
      - name: Install dependencies
        run: npm install --ignore-scripts
      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@v11.0.7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          major-wording: "#major"
          minor-wording: "#minor"
          patch-wording: "#patch"
      - name: Publish to npm
        shell: bash
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
