import FirefoxRandomnessPredictor from "../../src/predictors/Firefox";
import FirefoxRandomnessPredictor_New from "./FirefoxSymbolicStateOnly";

/** WORKING : THESE NUMBERS WERE GENERATED IN FIREFOX VERSION '137.0.2' BUILD ID '20250414091429' */

// [WORKS] Pretty sure these were generated by doing two separate Array.from({length:x},Math.random) calls.
const SEQ_V_137_0_2 = [0.1321263101773572, 0.03366887439746058, 0.032596957696410134, 0.9986575482138969];
const EXP_V_137_0_2 = [
  0.8479779907956815, 0.13963871472821332, 0.25068024611907636, 0.6656237481612675, 0.7381091878692425, 0.8709382509549467, 0.49171337524788294,
  0.6991749430716799, 0.9530887478758369, 0.781511163650037, 0.699311162730038,
];

/** SEMI-BROKEN : THESE NUMBERS WERE GENERATED IN FIREFOX VERSION '139.0.4' BUILD ID '20250609112858' */

// [WORKS] Generated by doing `Array.from({ length: 10 }, Math.random)` and then taking the first 4 numbers to use as sequence and remaining 6 to use a expected values.
const SEQ_SPLIT_V_139_0_4 = [0.10177076499519089, 0.7989203892973479, 0.12215188897726592, 0.354241738590902];
const EXP_SPLIT_V_139_0_4 = [0.4228140065673416, 0.0811073582862093, 0.4847141071195198, 0.5453152667939447, 0.13214163247656896, 0.6049998385215539];
// [BROKEN] Generated by doing `Array.from({ length: 4 }, Math.random)` and usng as initial sequence, then another `Array.from({ length: 5 }, Math.random)` to be used as expected values.
const SEQ_SEPARATE_V_139_0_4 = [0.0730188332863182, 0.6856155124958295, 0.7425632545074454, 0.7808789807047183];
const EXP_SEPARATE_V_139_0_4 = [0.9939277029326079, 0.6893900360004278, 0.8276276221834773, 0.9152544598590587, 0.763838263001022];

Main();
async function Main() {
  /*
  const ffWorking = new FirefoxRandomnessPredictor(SEQ_V_137_0_2);
  const ogNextPredictions: number[] = [];
  for (let i = 0; i < EXP_V_137_0_2.length; i++) {
    ogNextPredictions.push(await ffWorking.predictNext());
  }
  console.log({
    predictor: "OG Class : Working Firefox Sequence v137.0.2",
    nextPredictions: ogNextPredictions,
    expected: ogNextPredictions.every((v, i) => v === EXP_V_137_0_2[i]),
  });

  try {
    const ffNewWorking = new FirefoxRandomnessPredictor_New(SEQ_V_137_0_2);
    const newNextPredictions: number[] = [];
    for (let i = 0; i < EXP_V_137_0_2.length; i++) {
      newNextPredictions.push(await ffNewWorking.predictNext());
    }
    console.log({
      predictor: "New Class : Working Firefox Sequence v137.0.2",
      nextPrediction: newNextPredictions,
      expected: newNextPredictions.every((v, i) => v === EXP_V_137_0_2[i])
    });
  } catch (e) {
    console.error("[ERROR] OG Class : Working Firefox Sequence v137.0.2", e);
  }
  */

  /*
  const ffWorking = new FirefoxRandomnessPredictor(SEQ_V_137_0_2);
  const ogNextPrediction = await ffWorking.predictNext();
  console.log({
    predictor: "OG Class : Working Firefox Sequence v137.0.2",
    nextPredictions: ogNextPrediction,
    expected: EXP_V_137_0_2[0],
  });
  console.log("");
  const ffNewWorking = new FirefoxRandomnessPredictor_New(SEQ_V_137_0_2);
  const newNextPrediction = await ffNewWorking.predictNext();
  console.log({
    predictor: "New Class : Working Firefox Sequence v137.0.2",
    nextPrediction: newNextPrediction,
    expected: EXP_V_137_0_2[0]
  });
  */

  const ffWorking = new FirefoxRandomnessPredictor([
    0.6655676978701726, 0.2702482809134744, 0.12043207724745175, 0.7216605091996419, 0.17818511883560784, 0.4977147045686142, 0.21394889856751076,
    0.23164321319438885, 0.5722415546428192, 0.954939154249402, 0.21377640923398988, 0.4884100463250015, 0.7775901143241962, 0.9272081978801037,
    0.7518404207366437, 0.21494965654655684, 0.3472277450190754, 0.5935846346814903, 0.7382816794135666, 0.21510296072901824,
  ]);
  const ogNextPrediction_1 = await ffWorking.predictNext();
  const ogNextPrediction_2 = await ffWorking.predictNext();
  console.log({
    predictor: "OG Class",
    nextPredictions: [ogNextPrediction_1, ogNextPrediction_2],
  });
}
